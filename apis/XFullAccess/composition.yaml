apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xfullaccess.aws.cast.ai
  labels:
    provider: aws
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: aws.cast.ai/v1alpha1
    kind: XFullAccess
  patchSets:
  - name: common
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.deletionPolicy
      toFieldPath: spec.deletionPolicy
    - type: FromCompositeFieldPath
      fromFieldPath: spec.providerConfigRef.name
      toFieldPath: spec.providerConfigRef.name

  resources:
    - name: cast-ai-cluster-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          labels:
            resource: cast-ai-cluster-role
      patches:
        - type: PatchSet
          patchSetName: common
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.onboarding.clusterRole
          policy:
            fromFieldPath: Optional
        - type: CombineFromComposite
          toFieldPath: metadata.name
          combine:
            variables:
              - fromFieldPath: spec.forProvider.clusterName
            strategy: string
            string:
              fmt: "cast-eks-%s-cluster-role"
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.assumeRolePolicy
          policy:
            fromFieldPath: Required
          combine:
            variables:
              - fromFieldPath: status.onboarding.awsUserARN
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "AWS": [
                          "%s"
                        ]
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                }

    - name: cast-ai-cluster-aws-user-arn
      base:
        apiVersion: castai.upbound.io/v1alpha1
        kind: AWSUserARN
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: status.onboarding.clusterId
          toFieldPath: spec.forProvider.clusterId
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.onboarding.awsUserARN
          policy:
            fromFieldPath: Optional

    - name: cast-ai-cluster-role-ec2-read-only
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-cluster-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-cluster-role-iam-read-only
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/IAMReadOnlyAccess
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-cluster-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-cluster-role-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        metadata:
          labels:
            resource: cast-ai-cluster-role-policy
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          toFieldPath: metadata.name
          combine:
            variables:
              - fromFieldPath: spec.forProvider.clusterName
            strategy: string
            string:
              fmt: "cast-eks-%s-cluster-policy"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: status.onboarding.accountId
            strategy: string
            string:
              fmt: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "PassRoleEC2",
                            "Action": "iam:PassRole",
                            "Effect": "Allow",
                            "Resource": "arn:aws:iam::*:role/*",
                            "Condition": {
                                "StringEquals": {
                                    "iam:PassedToService": "ec2.amazonaws.com"
                                }
                            }
                        },
                        {
                            "Sid": "NonResourcePermissions",
                            "Effect": "Allow",
                            "Action": [
                                "iam:DeleteInstanceProfile",
                                "iam:RemoveRoleFromInstanceProfile",
                                "iam:DeleteRole",
                                "iam:DetachRolePolicy",
                                "iam:CreateServiceLinkedRole",
                                "iam:DeleteServiceLinkedRole",
                                "ec2:CreateKeyPair",
                                "ec2:DeleteKeyPair",
                                "ec2:CreateTags",
                                "ec2:ImportKeyPair"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Sid": "RunInstancesPermissions",
                            "Effect": "Allow",
                            "Action": "ec2:RunInstances",
                            "Resource": [
                                "arn:aws:ec2:*:%[1]s:network-interface/*",
                                "arn:aws:ec2:*:%[1]s:security-group/*",
                                "arn:aws:ec2:*:%[1]s:volume/*",
                                "arn:aws:ec2:*:%[1]s:key-pair/*",
                                "arn:aws:ec2:*::image/*"
                            ]
                        }
                    ]
                }          
          toFieldPath: spec.forProvider.policy
          policy:
            fromFieldPath: Required

    - name: cast-ai-cluster-rpa-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArnSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-cluster-role-policy
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-cluster-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-cluster-role-policy-restricted
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        metadata:
          labels:
            resource: cast-ai-cluster-role-policy-restricted
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          toFieldPath: metadata.name
          combine:
            variables:
              - fromFieldPath: spec.forProvider.clusterName
            strategy: string
            string:
              fmt: "cast-eks-%s-cluster-policy-restricted"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: status.onboarding.accountId
              - fromFieldPath: spec.forProvider.region
              - fromFieldPath: spec.forProvider.clusterName
              - fromFieldPath: spec.forProvider.vpc
            strategy: string
            string:
              fmt: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "RunInstancesTagRestriction",
                            "Effect": "Allow",
                            "Action": "ec2:RunInstances",
                            "Resource": "arn:aws:ec2:%[2]s:%[1]s:instance/*",
                            "Condition": {
                                "StringEquals": {
                                    "aws:RequestTag/kubernetes.io/cluster/%[3]s": "owned"
                                }
                            }
                        },
                        {
                            "Sid": "RunInstancesVpcRestriction",
                            "Effect": "Allow",
                            "Action": "ec2:RunInstances",
                            "Resource": "arn:aws:ec2:%[2]s:%[1]s:subnet/*",
                            "Condition": {
                                "StringEquals": {
                                    "ec2:Vpc": "arn:aws:ec2:%[2]s:%[1]s:vpc/%[4]s"
                                }
                            }
                        },
                        {
                            "Sid": "InstanceActionsTagRestriction",
                            "Effect": "Allow",
                            "Action": [
                                "ec2:TerminateInstances",
                                "ec2:StartInstances",
                                "ec2:StopInstances",
                                "ec2:CreateTags"
                            ],
                            "Resource": "arn:aws:ec2:%[2]s:%[1]s:instance/*",
                            "Condition": {
                                "StringEquals": {
                                    "ec2:ResourceTag/kubernetes.io/cluster/%[3]s": [
                                        "owned",
                                        "shared"
                                    ]
                                }
                            }
                        },
                        {
                            "Sid": "VpcRestrictedActions",
                            "Effect": "Allow",
                            "Action": [
                                "ec2:DeleteSecurityGroup",
                                "ec2:DeleteNetworkInterface"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "StringEquals": {
                                    "ec2:Vpc": "arn:aws:ec2:%[2]s:%[1]s:vpc/%[4]s"
                                }
                            }
                        },
                        {
                            "Sid": "AutoscalingActionsTagRestriction",
                            "Effect": "Allow",
                            "Action": [
                                "autoscaling:UpdateAutoScalingGroup",
                                "autoscaling:SuspendProcesses",
                                "autoscaling:ResumeProcesses",
                                "autoscaling:TerminateInstanceInAutoScalingGroup"
                            ],
                            "Resource": "arn:aws:autoscaling:%[2]s:%[1]s:autoScalingGroup:*:autoScalingGroupName/*",
                            "Condition": {
                                "StringEquals": {
                                    "autoscaling:ResourceTag/kubernetes.io/cluster/%[3]s": [
                                        "owned",
                                        "shared"
                                    ]
                                }
                            }
                        },
                        {
                            "Sid": "EKS",
                            "Effect": "Allow",
                            "Action": [
                                "eks:Describe*",
                                "eks:List*"
                            ],
                            "Resource": [
                                "arn:aws:eks:%[2]s:%[1]s:cluster/%[3]s",
                                "arn:aws:eks:%[2]s:%[1]s:nodegroup/%[3]s/*/*"
                            ]
                        }
                    ]
                }       
          toFieldPath: spec.forProvider.policy
          policy:
            fromFieldPath: Required

    - name: cast-ai-cluster-rpa-policy-restricted
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArnSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-cluster-role-policy-restricted
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-cluster-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-instance-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          labels:
            resource: cast-ai-instance-role
        spec:
          forProvider:
            assumeRolePolicy: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "ec2.amazonaws.com"
                        ]
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                }
      patches:
        - type: PatchSet
          patchSetName: common
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.onboarding.instanceProfileRole
          policy:
            fromFieldPath: Optional
        - type: CombineFromComposite
          toFieldPath: metadata.name
          combine:
            variables:
              - fromFieldPath: spec.forProvider.clusterName
            strategy: string
            string:
              fmt: "cast-eks-%s-instance-profile"

    - name: cast-ai-instance-role-eks-worker-node-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-instance-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-instance-role-ecr-read-only
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-instance-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-instance-role-cni
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-instance-role
      patches:
        - type: PatchSet
          patchSetName: common

    - name: cast-ai-cluster-instanceProfile
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: InstanceProfile
        spec:
          forProvider:
            roleSelector:
              matchControllerRef: true
              matchLabels:
                resource: cast-ai-instance-role
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          toFieldPath: metadata.name
          combine:
            variables:
              - fromFieldPath: spec.forProvider.clusterName
            strategy: string
            string:
              fmt: "cast-eks-%s-instance-profile"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.onboarding.instanceProfileArn
          policy:
            fromFieldPath: Optional

    - name: cast-ai-cluster-fullaccess-a
      base:
        apiVersion: aws.cast.ai/v1alpha1
        kind: XReadOnly
        spec: 
          forProvider:
            deleteNodesOnDisconnect: false
      patches:
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-read-only"
        - fromFieldPath: spec.forProvider.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.forProvider.accountId
          toFieldPath: spec.forProvider.accountId
          transforms:
            - type: string
              string:
                type: Regexp
                regexp:
                  match: '(\d+)' 
                  group: 1
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.clusterName
        - fromFieldPath: status.onboarding.clusterRole
          toFieldPath: spec.forProvider.assumeRoleArn
          policy:
            fromFieldPath: Required

    - name: cast-ai-cluster-eksClusterId
      base:
        apiVersion: castai.upbound.io/v1alpha1
        kind: EksClusterId
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.labels[cast-ai-cluster]
        - fromFieldPath: spec.forProvider.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.forProvider.accountId
          toFieldPath: spec.forProvider.accountId
          transforms:
            - type: string
              string:
                type: Regexp
                regexp:
                  match: '(\d+)' 
                  group: 1
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.clusterName
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.onboarding.clusterId
          policy:
            fromFieldPath: Optional
        - type: ToCompositeFieldPath
          fromFieldPath: spec.forProvider.accountId
          toFieldPath: status.onboarding.accountId
          policy:
            fromFieldPath: Optional

    - name: cast-ai-cluster-node-configuration
      base:
        apiVersion: castai.upbound.io/v1alpha1
        kind: NodeConfiguration
        metadata:
        spec:
          forProvider:
            clusterIdSelector:
              matchControllerRef: true
            diskCpuRatio: 0
            minDiskSize: 100
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.labels[cast-ai-cluster]
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.clusterIdSelector.matchLabels[cast-ai-cluster]
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.name
        - fromFieldPath: spec.forProvider.subnets
          toFieldPath: spec.forProvider.subnets
        - fromFieldPath: spec.forProvider.image
          toFieldPath: spec.forProvider.image
        - fromFieldPath: spec.forProvider.securityGroups
          toFieldPath: spec.forProvider.eks[0].securityGroups
        - fromFieldPath: status.onboarding.instanceProfileArn
          toFieldPath: spec.forProvider.eks[0].instanceProfileArn
          policy:
            fromFieldPath: Required

    - name: cast-ai-cluster-node-configuration-default
      base:
        apiVersion: castai.upbound.io/v1alpha1
        kind: NodeConfigurationDefault
        metadata:
        spec:
          forProvider:
            clusterIdSelector:
              matchControllerRef: true
            configurationIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.labels[cast-ai-cluster]
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.clusterIdSelector.matchLabels[cast-ai-cluster]
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.configurationIdSelector.matchLabels[cast-ai-cluster]

    - name: cast-ai-cluster-helm-chart-controller
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: castai-agent
            chart:
              name: castai-cluster-controller
              repository: https://castai.github.io/helm-charts/
              version: "0.49.5"
            set:
              - name: castai.apiKey
                valueFrom:
                  secretKeyRef:
                    key: attribute.cluster_token
                    namespace: crossplane-system
                    optional: false
              - name: castai.clusterID
                valueFrom:
                  secretKeyRef:
                    key: attribute.cluster_id
                    namespace: crossplane-system
                    optional: false
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.name
          transforms:
            - type: string
              string:
                fmt: "castai-%s"
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.set[1].valueFrom.secretKeyRef.name
          transforms:
            - type: string
              string:
                fmt: "castai-%s"
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: match
              match:
                patterns:
                  - type: regexp
                    regexp: '.*'
                    result: castai-cluster-controller

    - name: cast-ai-cluster-helm-chart-evictor
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: castai-agent
            chart:
              name: castai-evictor
              repository: https://castai.github.io/helm-charts/
              version: "0.21.69"
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: match
              match:
                patterns:
                  - type: regexp
                    regexp: '.*'
                    result: castai-evictor

    - name: cast-ai-cluster-helm-chart-spot
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: castai-agent
            chart:
              name: castai-spot-handler
              repository: https://castai.github.io/helm-charts/
              version: "0.18.2"
            values:
              castai: 
                provider: aws
            set:
              - name: castai.clusterID
                valueFrom:
                  secretKeyRef:
                    key: attribute.cluster_id
                    namespace: crossplane-system
                    optional: false
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.name
          transforms:
            - type: string
              string:
                fmt: "castai-%s"
        - fromFieldPath: spec.forProvider.clusterName
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: match
              match:
                patterns:
                  - type: regexp
                    regexp: '.*'
                    result: castai-spot-handler
